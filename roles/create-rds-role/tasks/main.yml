---
# tasks file for create-rds-role


# Get the Default VPC details
- name: get default vpc id
  ec2_vpc_net_info:
    region: "{{ aws_region }}"
    filters:
      isDefault: "true"
    profile: "{{ aws_profile}}"
  register: default_vpcinfo

- name: get k8s vpc id
  ec2_vpc_net_info:
    region: "{{ aws_region }}"
    filters:
      "tag:Name": "{{ cluster_name }}"
    profile: "{{ aws_profile}}"
  register: k8s_vpcinfo

# Get the default VPC's subnet details
- name: Get Facts of VPC
  ec2_vpc_subnet_facts:
    region: "{{ aws_region }}"
    filters:
      vpc-id: "{{ default_vpcinfo.vpcs[0].vpc_id }}"
    profile: "{{ aws_profile}}"
  register: default_subnetfacts

# Create Subnet group for RDS which will have all the subnets of the VPC refered above
- name: Create RDS Subnet Group
  vars:
        # Get all Subnet ids and convert to a list
    subnet_ids: "{{ default_subnetfacts.subnets|map(attribute='id')|list }}"
  rds_subnet_group:
    name: "{{rds_subnetgroup}}"
    description: RDS Subnet Group
    region: "{{ aws_region }}"
    profile: "{{ aws_profile}}"
    state: "present"
    subnets: "{{ subnet_ids }}"
  register: rds_subnet

- name: Get the Security group
  ec2_group_info:
    region: "{{ aws_region }}"
    filters:
      vpc-id: "{{ default_vpcinfo.vpcs[0].vpc_id }}"
    profile: "{{ aws_profile}}"
  register: default_securitygroup

- name: Update the security group with k8s details
  ec2_group:
    vpc_id: "{{ default_vpcinfo.vpcs[0].vpc_id }}"
    profile: "{{ aws_profile}}"
    region: "{{ aws_region }}"
    description: security group for rds
    name: "{{rds_securitygroup}}"
    rules:
      - proto: tcp
        from_port: 5432
        to_port: 5432
        cidr_ip: "{{ k8s_vpcinfo.vpcs[0].cidr_block }}"
  register: security_group

- name: Create rds instance
  rds:
    command:  create
    instance_name:  "{{ rds_instancename }}"
    instance_type: db.t2.micro
    db_engine:  postgres
    profile: "{{ aws_profile}}"
    db_name: "{{ rds_dbname }}"
    size: "20"
    multi_zone: no
    region: "{{ aws_region }}"
    publicly_accessible: false
    subnet: "{{  rds_subnet.subnet_group.name }}"
    vpc_security_groups: "{{security_group.group_id}}"
    username: "{{ rds_username }}"
    password: "{{ rds_password }}"
    tags:
      Application: recipe-backend-db
    wait: yes
    wait_timeout: 3000
  register: rdskubernetes

